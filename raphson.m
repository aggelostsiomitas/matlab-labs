% Ορισμός του πίνακα A
A = [0, 0, 2, 4;
     1/2, 0, 0, 0;
     0, 1/4, 0, 0;
     0, 0, 1/8, 0];

% Ορισμός του μοναδιαίου πίνακα I
I = eye(4);

% Ορισμός της συνάρτησης f(x) = det(A - x*I)
f = @(x) det(A - x*I);

% Διαφορική βήμα για τον υπολογισμό της παραγώγου
delta_x = 1e-6;

% Αρχικές εκτιμήσεις για τις ρίζες (προσθέτουμε διαφορετικά σημεία)
initial_guesses = [-2, 0, 2, 1+1i, -1-1i, 3+2i, -3-2i]; 
roots_found = [];

% Επαναληπτική διαδικασία του Newton-Raphson για κάθε αρχική εκτίμηση
tolerance = 1e-6;  % Ανοχή για τη διαφορά στις διαδοχικές εκτιμήσεις
max_iter = 100;    % Μέγιστος αριθμός επαναλήψεων

for j = 1:length(initial_guesses)
    x0 = initial_guesses(j);  % Επέλεξε την αρχική εκτίμηση για την τρέχουσα ρίζα
    x = x0;  % Αρχική εκτίμηση

    for i = 1:max_iter
        % Υπολογισμός της επόμενης εκτίμησης της συνάρτησης f(x)
        fx = f(x);
        
        % Υπολογισμός της παραγώγου με τη μέθοδο της διαφοράς
        fx_plus_dx = f(x + delta_x);
        f_prime = (fx_plus_dx - fx) / delta_x;

        % Υπολογισμός της επόμενης εκτίμησης με τη μέθοδο Newton-Raphson
        x_new = x - fx / f_prime;
        
        % Έλεγχος αν η διαφορά είναι μικρότερη από την ανοχή
        if abs(x_new - x) < tolerance
            break;
        end
        
        % Ενημέρωση της εκτίμησης για την επόμενη επανάληψη
        x = x_new;
    end
    
    % Έλεγχος για την αποφυγή αποθήκευσης επαναλαμβανόμενων ριζών
    if all(abs(roots_found - x) > tolerance)
        roots_found = [roots_found, x];
    end
end

% Εμφάνιση των ριζών
disp('Οι τέσσερις ρίζες είναι:');
disp(roots_found);
